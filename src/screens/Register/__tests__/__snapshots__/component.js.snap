// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register Tests renders correctly with Modal state 1`] = `
<ScrollViewMock
  contentContainerStyle={
    Object {
      "backgroundColor": "white",
      "padding": 10,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "height": 250,
      }
    }
  >
    <SvgMock
      height="100%"
      width="100%"
    />
  </View>
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={false}
    forceUnregisterOnUnmount={false}
    form="register"
    getFormState={[Function]}
    keepDirtyOnReinitialize={false}
    onSubmit={[Function]}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
  <ReactNativeModal
    animationIn="slideInUp"
    animationInTiming={300}
    animationOut="slideOutDown"
    animationOutTiming={300}
    avoidKeyboard={false}
    backdropColor="black"
    backdropOpacity={0.7}
    backdropTransitionInTiming={300}
    backdropTransitionOutTiming={300}
    coverScreen={true}
    customBackdrop={null}
    deviceHeight={null}
    deviceWidth={null}
    hasBackdrop={true}
    hideModalContentWhileAnimating={false}
    isVisible={true}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalShow={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    propagateSwipe={false}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    useNativeDriver={false}
  >
    <View
      style={
        Object {
          "backgroundColor": "white",
        }
      }
    >
      <Text>
        Success Modal
      </Text>
    </View>
  </ReactNativeModal>
</ScrollViewMock>
`;

exports[`Register Tests renders correctly with initial state 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "backgroundColor": "white",
      "padding": 10,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "height": 250,
        }
      }
    >
      <SvgMock
        height="100%"
        width="100%"
      />
    </View>
    <View>
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 10,
            }
          }
        >
          Nama
        </Text>
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "#ccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 5,
                "padding": 3,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              name="name"
              onBlur={[Function]}
              onChangeText={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              placeholder="Nama"
              rejectResponderTermination={true}
              style={
                Object {
                  "alignSelf": "center",
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 10,
            }
          }
        >
          Email
        </Text>
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "#ccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 5,
                "padding": 3,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              name="email"
              onBlur={[Function]}
              onChangeText={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              placeholder="Email"
              rejectResponderTermination={true}
              style={
                Object {
                  "alignSelf": "center",
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 10,
            }
          }
        >
          Nomor Telepon
        </Text>
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "#ccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 5,
                "padding": 3,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              name="phoneNum"
              onBlur={[Function]}
              onChangeText={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              placeholder="Nomor Telepon"
              rejectResponderTermination={true}
              style={
                Object {
                  "alignSelf": "center",
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 10,
            }
          }
        >
          Password
        </Text>
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "#ccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 5,
                "padding": 3,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              name="password"
              onBlur={[Function]}
              onChangeText={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              placeholder="Password"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Object {
                  "alignSelf": "center",
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "marginBottom": 5,
          }
        }
      >
        <Text
          style={
            Object {
              "marginBottom": 10,
              "marginLeft": 10,
            }
          }
        >
          Ulangi Password
        </Text>
        <View
          style={
            Object {
              "paddingHorizontal": 10,
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "borderBottomWidth": 1,
                "borderColor": "#ccc",
                "borderRadius": 5,
                "borderWidth": 1,
                "flexDirection": "row",
                "marginBottom": 5,
                "padding": 3,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              name="confirmPass"
              onBlur={[Function]}
              onChangeText={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              placeholder="Ulangi Password"
              rejectResponderTermination={true}
              secureTextEntry={true}
              style={
                Object {
                  "alignSelf": "center",
                  "color": "black",
                  "flex": 1,
                  "fontSize": 18,
                  "minHeight": 40,
                }
              }
              testID="RNE__Input__text-input"
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <View
          style={
            Object {
              "borderRadius": 3,
              "flex": 1,
              "margin": 2,
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#2089dc",
                  "borderColor": "#2089dc",
                  "borderRadius": 3,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 8,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Daftar
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
    <Modal
      animationType="none"
      hardwareAccelerated={false}
      hideModalContentWhileAnimating={false}
      onModalHide={[Function]}
      onModalWillHide={[Function]}
      onModalWillShow={[Function]}
      onRequestClose={[Function]}
      scrollHorizontal={false}
      scrollOffset={0}
      scrollOffsetMax={0}
      scrollTo={null}
      supportedOrientations={
        Array [
          "portrait",
          "landscape",
        ]
      }
      swipeThreshold={100}
      transparent={true}
      visible={false}
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "black",
            "bottom": 0,
            "height": 1334,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "width": 750,
          }
        }
      />
      <View
        hideModalContentWhileAnimating={false}
        onModalHide={[Function]}
        onModalWillHide={[Function]}
        onModalWillShow={[Function]}
        pointerEvents="box-none"
        scrollHorizontal={false}
        scrollOffset={0}
        scrollOffsetMax={0}
        scrollTo={null}
        style={
          Object {
            "flex": 1,
            "justifyContent": "center",
            "margin": 37.5,
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          }
        }
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        swipeThreshold={100}
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
            }
          }
        >
          <Text>
            Success Modal
          </Text>
        </View>
      </View>
    </Modal>
  </View>
</RCTScrollView>
`;
